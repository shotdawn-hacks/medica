version: "3.9"
services:
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "prod_db"
      POSTGRES_USER: "prod_user"
      POSTGRES_PASSWORD: "production"
    ports:
        - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
  grafana:
    image: grafana/grafana-enterprise:8.2.0
    ports:
      - 3000:3000
    user: '104'
  frontend:
    container_name: react_medica
    image: react_medica:1.0.0
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
    - '8080:8080'
  api-gateway:
    container_name: api-gateway
    image: api-gateway:1.0.0
    environment:
      CORE: core
    build:
        dockerfile: microservices/api-gateway/Dockerfile
        context: .
    ports:
    - '9000:9000'
  core:
    depends_on: 
    - "postgres"
    container_name: core
    image: core:1.0.0
    environment:
      POSTGRES: postgresql://prod_user:production@postgres:5432/prod_db?sslmode=disable
    build:
        dockerfile: microservices/core/Dockerfile
        context: .
    ports:
    - '9010:9010'
  analyzer:
    container_name: analyzer
    image: analyzer:1.0.0
    build:
        dockerfile: Dockerfile
        context: ./microservices/analyzer
    environment:
      CORE: core
      ANALYZER: analyzer
    ports:
    - '9020:9020'
    
volumes:
  postgres:
